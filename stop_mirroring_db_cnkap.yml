---
# Jalankan dengan:
# ansible-playbook -i inventory mirror_switch_recover_cnkap.yml
#
# ─ Grup inventori yang dibutuhkan ────────────────────────────────────────
# [kap_db_active]   = server database KAP yang saat ini memegang peran Principal
# [kap_db_inactive] = pasangan mirror‑nya (bekas DR) yang akan menjadi in‑active
#
# Keduanya harus bisa di‑reach via WinRM dan user Ansible memiliki hak sysadmin.

###########################################################################
# PLAY 1 ─ FAILOVER DI SERVER PRINCIPAL (AKTIF)
###########################################################################
- name: Fail‑over mirroring CNKAP (Principal ➜ Mirror)
  hosts: kap_db_active
  gather_facts: no

  vars:
    db_name:      CNKAP          # nama database
    sql_instance: MSSQLSERVER    # ganti bila pakai named instance

  tasks:
    - name: Jalankan ALTER DATABASE … SET PARTNER FAILOVER
      ansible.windows.win_shell: |
        $server = "{{ ansible_hostname }}\\{{ sql_instance }}"
        Write-Output "Men‑switch‑over {{ db_name }} di $server ..."
        sqlcmd -S $server -E -Q "ALTER DATABASE {{ db_name }} SET PARTNER FAILOVER;"
        if ($LASTEXITCODE -ne 0) {
          Write-Error "FAILOVER gagal (exit $LASTEXITCODE)"; exit 1
        }
        Write-Output "FAILOVER sukses dijalankan."
      args:
        executable: powershell

    # Tambahkan sedikit jeda agar failover tersinkron sebelum lanjut
    - name: Tunggu 20 detik agar role bergeser
      ansible.builtin.pause:
        seconds: 20

###########################################################################
# PLAY 2 ─ RECOVERY DI SERVER IN‑ACTIVE (BEKAS PRINCIPAL)
###########################################################################
- name: Restore WITH RECOVERY di server bekas Principal (kini Mirror/Restoring)
  hosts: kap_db_inactive
  gather_facts: no

  vars:
    db_name:      CNKAP
    sql_instance: MSSQLSERVER

  tasks:
    - name: Jalankan RESTORE DATABASE {{ db_name }} WITH RECOVERY jika perlu
      ansible.windows.win_shell: |
        $server = "{{ ansible_hostname }}\\{{ sql_instance }}"

        # Cek state database
        $state = sqlcmd -S $server -E -Q "SET NOCOUNT ON; SELECT state_desc FROM sys.databases WHERE name='{{ db_name }}';" -h-1 2>$null
        Write-Output "State saat ini: $state"

        if ($state -match 'RESTORING') {
          Write-Output "Database dalam status RESTORING ➜ menjalankan WITH RECOVERY..."
          sqlcmd -S $server -E -Q "RESTORE DATABASE {{ db_name }} WITH RECOVERY;"
          if ($LASTEXITCODE -ne 0) {
            Write-Error "RESTORE WITH RECOVERY gagal (exit $LASTEXITCODE)"; exit 1
          }
          Write-Output "Database {{ db_name }} sekarang ONLINE."
        } else {
          Write-Output "Database tidak di RESTORING; tidak ada tindakan."
        }
      args:
        executable: powershell
